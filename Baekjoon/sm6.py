# 토지 개발
# 소마는 가로 세로의 크기가 1로 이뤄진 작은 칸들이 가로로 NN개 연결된 토지를 소유하고 있다. (단, NN은 2의 지수 승으로써 2, 4, 8, 16, 32, … 이다) 토지의 각 칸에는 토지를 개발함으로써 얻을 수 있는 이익이 적혀 있으며, 토지는 아래와 같은 형태로 개발한다.

# 토지를 개발할 때에는 토지를 절반으로 나누어 한쪽 절반에 해당하는 부분을 모두 활용하여 개발해야 한다.
# 특정 부분을 모두 활용하여 개발할 때 얻을 수 있는 이익은, 해당 부분에서 개발로 얻을 수 있는 이익 중 최댓값이다.
# 예를 들어, 아래와 같이 토지가 주어져 있다고 하자.

# img1
# ▲ 크게보기

# 그렇다면, 아래와 같이 좌/우로 나누어 개발할 수 있는 두 가지 선택지가 있다.

# img2
# ▲ 크게보기

# 왼쪽의 경우 얻을 수 있는 이익은 최댓값인 10이며, 오른쪽의 경우 얻을 수 있는 이익은 최댓값인 6이다. 이렇게 개발을 하고 난 이후에는 해당 면적을 더 개발하지 못하며, 남은 면적만을 활용하여 개발해야 한다. 예를 들어, 처음에 왼쪽 절반을 개발했다고 하자. 그렇게 되면 아래와 같이 두 가지 선택지가 존재하게 된다.

# img3
# ▲ 크게보기

# 이때 개발을 통해 얻을 수 있는 이익은 각각 6, 3이다. 위의 과정을 반복해서 절반씩 개발하다 보면 맨 마지막에는 결국 두 개의 칸이 남게 된다. 그 두 개의 칸을 또 절반으로 나누어 한 개의 칸을 개발하면, 마지막에 최종적으로 하나의 칸이 남게된다. 이와 같이 남은 칸이 1개일 경우에는 해당 칸에서 이익을 얻을 수 없으며 개발을 종료한다. 위 규칙을 토대로 예시의 토지를 모두 개발했을 때 소마는 이익의 합으로 최대 19 만큼의 이익을 얻을 수 있다.

# 크기가 NN인 토지와 각각의 칸에 대한 이익이 주어질 때, 토지 개발을 통해 소마가 얻을 수 있는 이익의 합 중 최댓값을 출력하시오.

# 입력
# 첫 번째 줄에 토지의 크기 정수 NN을 입력받는다.
# N = 2^M
# N=2 
# M
 
# 1 ≦ M ≦ 10
# 1≦M≦10
# 이후 두 번째 줄에 공백을 구분자로 가장 왼쪽부터 각 칸의 개발 이익 값 NN개를 입력받는다. (입력되는 개발 이익 값은 모두 양의 정수이다.)
# 출력
# 토지 개발을 통해 소마가 얻을 수 있는 이익의 합 중 최댓값을 출력한다.
# 입력 예시
# 8
# 1 3 10 9 6 2 3 2
# 출력 예시
# 19

def maxProfit(arr,num):
    sum_profit = 0
    l = 0
    r = num - 1
    while True:
        if(l == r):
            break
        m = (l + r) // 2
        left_arr = arr[l:(m + 1)].copy()
        right_arr = arr[m+1:(r + 1)].copy()
        
        if(max(left_arr) > max(right_arr)):
            sum_profit += max(left_arr)
            l = m + 1
        else:
            sum_profit += max(right_arr)
            r = m
    return sum_profit
        
def main():
    num = int(input())
    datas = list(map(int,input().split()))
    
    result = maxProfit(datas,num)
    print(result)

if __name__=="__main__":
    main()